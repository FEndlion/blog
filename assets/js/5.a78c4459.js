(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{233:function(v,_,e){v.exports=e.p+"assets/img/34.cca4d8fb.jpg"},234:function(v,_,e){v.exports=e.p+"assets/img/35.78755fdd.png"},235:function(v,_,e){v.exports=e.p+"assets/img/36.f5decc97.png"},236:function(v,_,e){v.exports=e.p+"assets/img/37.9832b719.png"},237:function(v,_,e){v.exports=e.p+"assets/img/38.a3952d95.png"},238:function(v,_,e){v.exports=e.p+"assets/img/39.8ebc0b34.png"},262:function(v,_,e){"use strict";e.r(_);var t=e(0),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"【第7题】浏览器缓存命中策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【第7题】浏览器缓存命中策略","aria-hidden":"true"}},[v._v("#")]),v._v(" 【第7题】浏览器缓存命中策略")]),v._v(" "),t("h3",{attrs:{id:"面试题目："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面试题目：","aria-hidden":"true"}},[v._v("#")]),v._v(" 面试题目：")]),v._v(" "),t("blockquote",[t("p",[v._v("浏览器缓存相关的头字段有哪些？http请求时，它们之间是如何互相协作的？")])]),v._v(" "),t("h3",{attrs:{id:"答案解析："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#答案解析：","aria-hidden":"true"}},[v._v("#")]),v._v(" 答案解析：")]),v._v(" "),t("p",[v._v("浏览器缓存是性能优化中简单高效的一种方式，按照缓存位置划分为以下几种类型：")]),v._v(" "),t("ol",[t("li",[v._v("service Worker")]),v._v(" "),t("li",[v._v("Memory Cache")]),v._v(" "),t("li",[v._v("Disk Cache")]),v._v(" "),t("li",[v._v("Push Cache")])]),v._v(" "),t("p",[v._v("浏览器请求时，会按照如上的优先级顺序，进行查找缓存，都没有命中时，才会去请求网络。")]),v._v(" "),t("p",[v._v("面试过程中问到的浏览器缓存相关问题，一般是针对"),t("code",[v._v("Disk Cache")]),v._v("而言的，也就是"),t("strong",[v._v("硬盘缓存")]),v._v("，下面我们主要对硬盘缓存进行详细解析下。")]),v._v(" "),t("p",[t("strong",[v._v("硬盘缓存分为以下两种类型")]),v._v("：")]),v._v(" "),t("ol",[t("li",[v._v("强缓存")]),v._v(" "),t("li",[v._v("协商缓存")])]),v._v(" "),t("p",[t("strong",[v._v("强缓存")])]),v._v(" "),t("p",[v._v("强缓存特点是：不需要向服务器发出请求，直接从硬盘缓存中读取想要的资源。在Chrome调试面板 Network面板中，能看到该类请求会返回200状态码，"),t("code",[v._v("Size")]),v._v(" 字段显示 "),t("code",[v._v("from disk cache")]),v._v("，如下图所示：")]),v._v(" "),t("p",[t("img",{attrs:{src:e(233),alt:"硬盘缓存"}})]),v._v(" "),t("p",[v._v("当我们自己打开一个web页面查看的时候，会发现第一次打开一般都是请求的服务器，然后点击刷新按钮，刷新当前页面，发现 "),t("code",[v._v("Size")]),v._v(" 字段并没有出现"),t("code",[v._v("from disk cache")]),v._v("，而是显示"),t("code",[v._v("from memory cache")]),v._v("，这是为什么呢？")]),v._v(" "),t("p",[t("img",{attrs:{src:e(234),alt:"Memory Cache"}})]),v._v(" "),t("p",[v._v("这是因为浏览器请求资源时，命中了"),t("code",[v._v("memory cache")]),v._v("，也就是所谓的"),t("strong",[v._v("内存缓存")]),v._v("，内存缓存的优先级高于硬盘缓存，也比硬盘缓存的速度快。")]),v._v(" "),t("p",[t("strong",[v._v("如何复现出 "),t("code",[v._v("disk cache")]),v._v(" 呢？")])]),v._v(" "),t("p",[v._v("重新打开一个浏览器的tab栏，输入页面地址打开，这个时候就会看到 "),t("code",[v._v("disk cache")]),v._v(" 了。原因是每个tab栏都会启动新的进程，所以就不会共享内存，也就不会命中"),t("code",[v._v("memory cache")]),v._v("了。")]),v._v(" "),t("p",[t("strong",[v._v("强缓存有两个头字段控制："),t("code",[v._v("Expired")]),v._v(" 和 "),t("code",[v._v("Cache-Control")])])]),v._v(" "),t("p",[t("strong",[v._v("Expired")])]),v._v(" "),t("p",[t("code",[v._v("Expired")]),v._v(" 是 Http/1.0的产物，表示的资源的过期时间（服务器端的时间）。Expires是Web服务器响应消息头字段，在响应http请求时告诉浏览器在过期时间前浏览器可以直接从浏览器缓存取数据，而无需再次请求。")]),v._v(" "),t("p",[v._v("比如"),t("code",[v._v("Expires:Thu,31 Dec 2037 23:59:59 GMT")]),v._v("。这个时间代表着这个资源的失效时间，也就是说在2037年12月31日23点59分59秒之前都是有效的，即命中缓存。这种方式有一个明显的缺点，由于失效时间是一个绝对时间，所以当客户端本地时间被修改以后，服务器与客户端时间偏差变大以后，就会导致缓存混乱。于是发展出了Cache-Control。")]),v._v(" "),t("p",[t("img",{attrs:{src:e(235),alt:"Expired"}})]),v._v(" "),t("p",[t("strong",[v._v("Cache-Control")])]),v._v(" "),t("p",[t("code",[v._v("Cache-Control")]),v._v("是一个相对时间，例如"),t("code",[v._v("Cache-Control:3600")]),v._v("，代表着资源的有效期是3600秒。由于是相对时间，并且都是与客户端时间比较，所以服务器与客户端时间偏差也不会导致问题。\n"),t("code",[v._v("Cache-Control")]),v._v("与"),t("code",[v._v("Expires")]),v._v("可以在服务端配置同时启用或者启用任意一个，同时启用的时候"),t("code",[v._v("Cache-Control")]),v._v("优先级高。")]),v._v(" "),t("p",[v._v("Cache-Control 可以由多个字段组合而成，主要有以下几个取值：")]),v._v(" "),t("ol",[t("li",[v._v("max-age 指定一个时间长度，在这个时间段内缓存是有效的，单位是s。例如设置 Cache-Control:max-age=31536000，也就是说缓存有效期为（31536000 / 24 / 60 * 60）天，第一次访问这个资源的时候，服务器端也返回了 Expires 字段，并且过期时间是一年后。在没有禁用缓存并且没有超过有效时间的情况下，再次访问这个资源就命中了缓存，不会向服务器请求资源而是直接从浏览器缓存中取。")])]),v._v(" "),t("p",[t("img",{attrs:{src:e(236),alt:"Cache-Control"}})]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[v._v("s-maxage 同 max-age，覆盖 max-age、Expires，但仅适用于共享缓存，在私有缓存中被忽略。")])]),v._v(" "),t("li",[t("p",[v._v("public 表明响应可以被任何对象（发送请求的客户端、代理服务器等等）缓存。")])]),v._v(" "),t("li",[t("p",[v._v("private 表明响应只能被单个用户（可能是操作系统用户、浏览器用户）缓存，是非共享的，不能被代理服务器缓存。")])]),v._v(" "),t("li",[t("p",[v._v("no-cache 强制所有缓存了该响应的用户，在使用已缓存的数据前，发送带验证器的请求到服务器。不是字面意思上的不缓存。")])]),v._v(" "),t("li",[t("p",[v._v("no-store 禁止缓存，每次请求都要向服务器重新获取数据。")])]),v._v(" "),t("li",[t("p",[v._v("must-revalidate指定如果页面是过期的，则去服务器进行获取。这个指令并不常用，就不做过多的讨论了。")])])]),v._v(" "),t("p",[t("strong",[v._v("协商缓存")])]),v._v(" "),t("p",[v._v("若未命中强缓存，则浏览器会将请求发送至服务器。服务器根据http头信息中的"),t("code",[v._v("Last-Modified/If-Modified-Since")]),v._v("或"),t("code",[v._v("Etag/If-None-Match")]),v._v("来判断是否命中协商缓存。如果命中，则http返回码为304，浏览器从缓存中加载资源。")]),v._v(" "),t("p",[t("strong",[v._v("Last-Modified/If-Modified-Since")])]),v._v(" "),t("p",[v._v("浏览器第一次请求一个资源的时候，服务器返回的header中会加上Last-Modify，"),t("code",[v._v("Last-Modified")]),v._v("是一个时间标识该资源的最后修改时间，例如"),t("code",[v._v("Last-Modified: Thu,31 Dec 2037 23:59:59 GMT")]),v._v("。")]),v._v(" "),t("p",[t("img",{attrs:{src:e(237),alt:"Last-Modified"}})]),v._v(" "),t("p",[v._v("当浏览器再次请求该资源时，发送的请求头中会包含"),t("code",[v._v("If-Modified-Since")]),v._v("，该值为缓存之前返回的"),t("code",[v._v("Last-Modified")]),v._v("。服务器收到"),t("code",[v._v("If-Modified-Since")]),v._v("后，根据资源的最后修改时间判断是否命中缓存。")]),v._v(" "),t("p",[v._v("如果命中缓存，则返回http304，并且不会返回资源内容，并且不会返回Last-Modify。由于对比的服务端时间，所以客户端与服务端时间差距不会导致问题。但是有时候通过最后修改时间来判断资源是否修改还是不太准确（资源变化了最后修改时间也可以一致）。于是出现了"),t("code",[v._v("ETag/If-None-Match")]),v._v("。")]),v._v(" "),t("p",[t("strong",[v._v("ETag/If-None-Match")])]),v._v(" "),t("p",[v._v("与"),t("code",[v._v("Last-Modified/If-Modified-Since")]),v._v("不同的是，"),t("code",[v._v("Etag/If-None-Match")]),v._v("返回的是一个校验码（"),t("code",[v._v("ETag: entity tag")]),v._v("）。"),t("code",[v._v("ETag")]),v._v("可以保证每一个资源是唯一的，资源变化都会导致ETag变化。"),t("code",[v._v("ETag")]),v._v("值的变更则说明资源状态已经被修改。服务器根据浏览器上发送的"),t("code",[v._v("If-None-Match")]),v._v("值来判断是否命中缓存。")]),v._v(" "),t("p",[t("strong",[v._v("既然"),t("code",[v._v("last-modify")]),v._v("可以识别出资源是否更新，为什么还需要"),t("code",[v._v("ETag")]),v._v("呢？")])]),v._v(" "),t("ol",[t("li",[t("p",[t("code",[v._v("Last-Modified")]),v._v("标注的最后修改只能精确到秒级，如果某些文件在1秒钟以内，被修改多次的话，它将不能准确标注文件的修改时间")])]),v._v(" "),t("li",[t("p",[v._v("如果某些文件会被定期生成，但内容并没有任何变化，"),t("code",[v._v("Last-Modified")]),v._v("却改变了，导致该文件被认为更新了，无法使用缓存。")])])]),v._v(" "),t("p",[v._v("由于"),t("code",[v._v("ETag")]),v._v("是服务器生成的唯一标识符，能够更加准确的控制缓存，所以"),t("code",[v._v("ETag")]),v._v("的优先级高于"),t("code",[v._v("last-Modified")]),v._v("，")]),v._v(" "),t("p",[t("strong",[v._v("总结")])]),v._v(" "),t("p",[v._v("浏览器请求时的大致过程描述如下：")]),v._v(" "),t("ol",[t("li",[v._v("浏览器发出http请求前，先根据"),t("code",[v._v("Cache-Control")]),v._v("和"),t("code",[v._v("Expired")]),v._v(" 字段判断缓存是否过期（两个字段同时存在的情况下，根据"),t("code",[v._v("Cache-Control")]),v._v("判断，该字段不存在时根据"),t("code",[v._v("Expired")]),v._v("判断）。如果没有过期，浏览器不发出http请求，直接从硬盘缓存中读取资源；如果已过期，则进行第2步逻辑；")]),v._v(" "),t("li",[v._v("向服务器发出http请求，其中request headers上会携带"),t("code",[v._v("If-none-match")]),v._v("和"),t("code",[v._v("If-Modified-since")]),v._v("字段，服务器收到请求后，会将"),t("code",[v._v("If-none-match")]),v._v("字段和本地的资源的"),t("code",[v._v("ETag")]),v._v("进行比较，如果二者不相等，则资源已更新，会返回"),t("code",[v._v("200")]),v._v("状态码和资源数据，响应头也会带上最新的资源"),t("code",[v._v("ETag")]),v._v("；如果二者相等，则命中缓存，返回"),t("code",[v._v("304")]),v._v("，浏览器收到响应后会读取本地缓存资源。如果"),t("code",[v._v("If-none-match")]),v._v("字段不存在，服务器会根据"),t("code",[v._v("if-Modified-since")]),v._v("字段进行比对资源的最后修改时间，处理逻辑基本和"),t("code",[v._v("If-none-match")]),v._v("一致。")])]),v._v(" "),t("p",[t("img",{attrs:{src:e(238),alt:"流程图"}})]),v._v(" "),t("p",[t("strong",[v._v("补充")])]),v._v(" "),t("p",[v._v("浏览器缓存行为还有用户的行为有关！！！")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("用户操作")]),v._v(" "),t("th",[v._v("Expires/Cache-Control")]),v._v(" "),t("th",[v._v("Expires/Cache-Control")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("地址栏回车")]),v._v(" "),t("td",[v._v("有效")]),v._v(" "),t("td",[v._v("有效")])]),v._v(" "),t("tr",[t("td",[v._v("页面链接跳转")]),v._v(" "),t("td",[v._v("有效")]),v._v(" "),t("td",[v._v("有效")])]),v._v(" "),t("tr",[t("td",[v._v("新开窗口")]),v._v(" "),t("td",[v._v("有效")]),v._v(" "),t("td",[v._v("有效")])]),v._v(" "),t("tr",[t("td",[v._v("前进、后退")]),v._v(" "),t("td",[v._v("有效")]),v._v(" "),t("td",[v._v("有效")])]),v._v(" "),t("tr",[t("td",[v._v("F5刷新")]),v._v(" "),t("td",[v._v("无效")]),v._v(" "),t("td",[v._v("有效")])]),v._v(" "),t("tr",[t("td",[v._v("Ctrl+F5刷新")]),v._v(" "),t("td",[v._v("无效")]),v._v(" "),t("td",[v._v("无效")])])])]),v._v(" "),t("hr"),v._v(" "),t("p",[t("strong",[v._v("扫一扫 关注我的公众号【前端名狮】，更多精彩内容陪伴你！")]),v._v(" "),t("img",{attrs:{src:e(58),alt:"【前端名狮】"}})])])}),[],!1,null,null,null);_.default=o.exports},58:function(v,_,e){v.exports=e.p+"assets/img/7.3e56d765.png"}}]);